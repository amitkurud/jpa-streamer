<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Criteria - Standard"><sessioninfo id="Julias-iMac.lan-3be21cfd" start="1593508680612" dump="1593508682527"/><package name="com/speedment/jpastreamer/criteria/standard"><class name="com/speedment/jpastreamer/criteria/standard/StandardCriteriaFactory" sourcefilename="StandardCriteriaFactory.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCriteria" desc="(Ljavax/persistence/criteria/CriteriaBuilder;Ljavax/persistence/criteria/CriteriaQuery;Ljavax/persistence/criteria/Root;)Lcom/speedment/jpastreamer/criteria/Criteria;" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCriteria" desc="(Ljavax/persistence/EntityManager;Ljava/lang/Class;)Lcom/speedment/jpastreamer/criteria/Criteria;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/speedment/jpastreamer/criteria/standard/StandardPredicateFactory" sourcefilename="StandardPredicateFactory.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPredicate" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/SpeedmentPredicate;)Ljavax/persistence/criteria/Predicate;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StandardCriteriaFactory.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StandardPredicateFactory.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/speedment/jpastreamer/criteria/standard/internal/predicate"><class name="com/speedment/jpastreamer/criteria/standard/internal/predicate/PredicateMapper" sourcefilename="PredicateMapper.java"><method name="getInstance" desc="()Lcom/speedment/jpastreamer/criteria/standard/internal/predicate/PredicateMapper;" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/speedment/jpastreamer/criteria/standard/internal/predicate/DefaultPredicateMapper" sourcefilename="DefaultPredicateMapper.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapPredicate" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="46"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alwaysTrue" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="56"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alwaysFalse" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="86"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equal" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqual" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="107"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="119"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqual" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="131"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="143"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notBetween" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="208"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="in" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="277"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notIn" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="284"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="292"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqual" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="304"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="315"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqualIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="327"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startsWith" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="339"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notStartsWith" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="350"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startsWithIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="361"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notStartsWithIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="373"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endsWith" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="385"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEndsWith" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="396"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endsWithIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="407"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEndsWithIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="419"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="431"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContains" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="442"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="453"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContainsIgnoreCase" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="465"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="477"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEmpty" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="487"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noValueMapping" desc="(Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;Ljava/util/function/Function;)Ljavax/persistence/criteria/Predicate;" line="501"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeMapping" desc="(Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;Ljava/util/function/BiFunction;Ljava/lang/Class;)Ljavax/persistence/criteria/Predicate;" line="512"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleBoundRangeComparisonMapping" desc="(Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;)Ljavax/persistence/criteria/Predicate;" line="528"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleBoundRangeComparisonMapping" desc="(Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;Ljava/util/function/BiFunction;)Ljavax/persistence/criteria/Predicate;" line="551"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapPredicate0" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/FieldPredicate;)Ljavax/persistence/criteria/Predicate;" line="580"><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="31" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isNotEmpty$31" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="489"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isEmpty$30" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="479"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notContainsIgnoreCase$29" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="467"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$containsIgnoreCase$28" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="455"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notContains$27" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="444"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$contains$26" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="433"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notEndsWithIgnoreCase$25" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="421"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$endsWithIgnoreCase$24" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="409"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notEndsWith$23" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="398"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$endsWith$22" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="387"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notStartsWithIgnoreCase$21" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="375"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$startsWithIgnoreCase$20" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="363"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notStartsWith$19" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="352"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$startsWith$18" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="341"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notEqualIgnoreCase$17" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="329"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$equalIgnoreCase$16" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="317"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$greaterOrEqual$15" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Comparable;)Ljavax/persistence/criteria/Predicate;" line="307"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$greaterOrEqual$14" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Number;)Ljavax/persistence/criteria/Predicate;" line="306"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$greaterThan$13" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Comparable;)Ljavax/persistence/criteria/Predicate;" line="295"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$greaterThan$12" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Number;)Ljavax/persistence/criteria/Predicate;" line="294"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notBetween$11" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Lcom/speedment/common/tuple/Tuple3;)Ljavax/persistence/criteria/Predicate;" line="211"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$between$10" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Lcom/speedment/common/tuple/Tuple3;)Ljavax/persistence/criteria/Predicate;" line="146"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$lessOrEqual$9" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Comparable;)Ljavax/persistence/criteria/Predicate;" line="134"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$lessOrEqual$8" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Number;)Ljavax/persistence/criteria/Predicate;" line="133"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$lessThan$7" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Comparable;)Ljavax/persistence/criteria/Predicate;" line="122"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$lessThan$6" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Number;)Ljavax/persistence/criteria/Predicate;" line="121"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notEqual$5" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Object;)Ljavax/persistence/criteria/Predicate;" line="109"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$equal$4" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;Ljava/lang/Object;)Ljavax/persistence/criteria/Predicate;" line="98"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isNotNull$3" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isNull$2" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$alwaysFalse$1" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="68"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$alwaysTrue$0" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/lang/String;)Ljavax/persistence/criteria/Predicate;" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1088" covered="3"/><counter type="BRANCH" missed="53" covered="0"/><counter type="LINE" missed="166" covered="1"/><counter type="COMPLEXITY" missed="112" covered="1"/><counter type="METHOD" missed="68" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultPredicateMapper.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="133" mi="9" ci="0" mb="0" cb="0"/><line nr="134" mi="9" ci="0" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="5" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="14" ci="0" mb="0" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="5" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="14" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="8" ci="0" mb="0" cb="0"/><line nr="294" mi="9" ci="0" mb="0" cb="0"/><line nr="295" mi="9" ci="0" mb="0" cb="0"/><line nr="304" mi="8" ci="0" mb="0" cb="0"/><line nr="306" mi="9" ci="0" mb="0" cb="0"/><line nr="307" mi="9" ci="0" mb="0" cb="0"/><line nr="315" mi="7" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="8" ci="0" mb="0" cb="0"/><line nr="327" mi="7" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="8" ci="0" mb="0" cb="0"/><line nr="339" mi="7" ci="0" mb="0" cb="0"/><line nr="341" mi="16" ci="0" mb="0" cb="0"/><line nr="350" mi="7" ci="0" mb="0" cb="0"/><line nr="352" mi="16" ci="0" mb="0" cb="0"/><line nr="361" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="5" ci="0" mb="0" cb="0"/><line nr="364" mi="15" ci="0" mb="0" cb="0"/><line nr="373" mi="7" ci="0" mb="0" cb="0"/><line nr="375" mi="5" ci="0" mb="0" cb="0"/><line nr="376" mi="15" ci="0" mb="0" cb="0"/><line nr="385" mi="7" ci="0" mb="0" cb="0"/><line nr="387" mi="16" ci="0" mb="0" cb="0"/><line nr="396" mi="7" ci="0" mb="0" cb="0"/><line nr="398" mi="16" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="15" ci="0" mb="0" cb="0"/><line nr="419" mi="7" ci="0" mb="0" cb="0"/><line nr="421" mi="5" ci="0" mb="0" cb="0"/><line nr="422" mi="15" ci="0" mb="0" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="433" mi="18" ci="0" mb="0" cb="0"/><line nr="442" mi="7" ci="0" mb="0" cb="0"/><line nr="444" mi="18" ci="0" mb="0" cb="0"/><line nr="453" mi="7" ci="0" mb="0" cb="0"/><line nr="455" mi="5" ci="0" mb="0" cb="0"/><line nr="456" mi="17" ci="0" mb="0" cb="0"/><line nr="465" mi="7" ci="0" mb="0" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="17" ci="0" mb="0" cb="0"/><line nr="477" mi="6" ci="0" mb="0" cb="0"/><line nr="479" mi="9" ci="0" mb="0" cb="0"/><line nr="487" mi="6" ci="0" mb="0" cb="0"/><line nr="489" mi="9" ci="0" mb="0" cb="0"/><line nr="501" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="512" mi="4" ci="0" mb="0" cb="0"/><line nr="513" mi="6" ci="0" mb="0" cb="0"/><line nr="515" mi="4" ci="0" mb="2" cb="0"/><line nr="516" mi="6" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="528" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="6" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="2" cb="0"/><line nr="532" mi="7" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="2" cb="0"/><line nr="536" mi="9" ci="0" mb="0" cb="0"/><line nr="539" mi="3" ci="0" mb="2" cb="0"/><line nr="540" mi="7" ci="0" mb="0" cb="0"/><line nr="543" mi="14" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="552" mi="6" ci="0" mb="0" cb="0"/><line nr="553" mi="6" ci="0" mb="0" cb="0"/><line nr="555" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="3" ci="0" mb="0" cb="0"/><line nr="559" mi="6" ci="0" mb="4" cb="0"/><line nr="560" mi="7" ci="0" mb="0" cb="0"/><line nr="566" mi="6" ci="0" mb="0" cb="0"/><line nr="569" mi="18" ci="0" mb="0" cb="0"/><line nr="580" mi="6" ci="0" mb="31" cb="0"/><line nr="582" mi="5" ci="0" mb="0" cb="0"/><line nr="584" mi="5" ci="0" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="588" mi="5" ci="0" mb="0" cb="0"/><line nr="590" mi="5" ci="0" mb="0" cb="0"/><line nr="592" mi="5" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="5" ci="0" mb="0" cb="0"/><line nr="600" mi="5" ci="0" mb="0" cb="0"/><line nr="602" mi="5" ci="0" mb="0" cb="0"/><line nr="604" mi="5" ci="0" mb="0" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="608" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="5" ci="0" mb="0" cb="0"/><line nr="612" mi="5" ci="0" mb="0" cb="0"/><line nr="614" mi="5" ci="0" mb="0" cb="0"/><line nr="616" mi="5" ci="0" mb="0" cb="0"/><line nr="618" mi="5" ci="0" mb="0" cb="0"/><line nr="620" mi="5" ci="0" mb="0" cb="0"/><line nr="622" mi="5" ci="0" mb="0" cb="0"/><line nr="624" mi="5" ci="0" mb="0" cb="0"/><line nr="626" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="5" ci="0" mb="0" cb="0"/><line nr="630" mi="5" ci="0" mb="0" cb="0"/><line nr="632" mi="5" ci="0" mb="0" cb="0"/><line nr="634" mi="5" ci="0" mb="0" cb="0"/><line nr="636" mi="5" ci="0" mb="0" cb="0"/><line nr="638" mi="5" ci="0" mb="0" cb="0"/><line nr="640" mi="5" ci="0" mb="0" cb="0"/><line nr="642" mi="8" ci="0" mb="0" cb="0"/><line nr="643" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1088" covered="3"/><counter type="BRANCH" missed="53" covered="0"/><counter type="LINE" missed="166" covered="1"/><counter type="COMPLEXITY" missed="112" covered="1"/><counter type="METHOD" missed="68" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PredicateMapper.java"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1088" covered="7"/><counter type="BRANCH" missed="53" covered="0"/><counter type="LINE" missed="166" covered="2"/><counter type="COMPLEXITY" missed="112" covered="2"/><counter type="METHOD" missed="68" covered="2"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/speedment/jpastreamer/criteria/standard/internal/util"><class name="com/speedment/jpastreamer/criteria/standard/internal/util/Cast" sourcefilename="Cast.java"><method name="cast" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Optional;" line="43"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castOrFail" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$castOrFail$0" desc="(Ljava/lang/Class;Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Cast.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="2" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="2" cb="0"/><line nr="67" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="com/speedment/jpastreamer/criteria/standard/internal"><class name="com/speedment/jpastreamer/criteria/standard/internal/InternalCriteria" sourcefilename="InternalCriteria.java"><method name="&lt;init&gt;" desc="(Ljavax/persistence/criteria/CriteriaBuilder;Ljavax/persistence/criteria/CriteriaQuery;Ljavax/persistence/criteria/Root;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuilder" desc="()Ljavax/persistence/criteria/CriteriaBuilder;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuery" desc="()Ljavax/persistence/criteria/CriteriaQuery;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljavax/persistence/criteria/Root;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/speedment/jpastreamer/criteria/standard/internal/InternalPredicateFactory" sourcefilename="InternalPredicateFactory.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPredicate" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Lcom/speedment/jpastreamer/field/predicate/SpeedmentPredicate;)Ljavax/persistence/criteria/Predicate;" line="41"><counter type="INSTRUCTION" missed="31" covered="50"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createPredicate$1" desc="(I)[Ljavax/persistence/criteria/Predicate;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createPredicate$0" desc="(Lcom/speedment/jpastreamer/criteria/Criteria;Ljava/util/function/Predicate;)Ljavax/persistence/criteria/Predicate;" line="54"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="84"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/speedment/jpastreamer/criteria/standard/internal/InternalCriteriaFactory" sourcefilename="InternalCriteriaFactory.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCriteria" desc="(Ljavax/persistence/criteria/CriteriaBuilder;Ljavax/persistence/criteria/CriteriaQuery;Ljavax/persistence/criteria/Root;)Lcom/speedment/jpastreamer/criteria/Criteria;" line="36"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="InternalPredicateFactory.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="1" cb="1"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="1" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="84"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InternalCriteriaFactory.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InternalCriteria.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="31" covered="124"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="1183" covered="160"/><counter type="BRANCH" missed="61" covered="7"/><counter type="LINE" missed="185" covered="39"/><counter type="COMPLEXITY" missed="121" covered="19"/><counter type="METHOD" missed="72" covered="16"/><counter type="CLASS" missed="1" covered="7"/></report>